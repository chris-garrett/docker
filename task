#!/bin/bash

source ./config.env

export LOCAL_DIR=$(pwd)/.local
export LOCAL_CACHE_DIR=${LOCAL_DIR}/cache
export LOCAL_BIN_DIR=${LOCAL_DIR}/bin
export LOG_LEVEL=DEBUG
export PYTHONPATH=$(pwd)/py:${PYTHONPATH}
export PYTHONDONTWRITEBYTECODE=1
export PATH=$LOCAL_BIN_DIR:$PATH

mkdir -p \
    ${LOCAL_BIN_DIR}/bin \
    ${LOCAL_CACHE_DIR}/npm \
    ${LOCAL_CACHE_DIR}/pnpm \
    ${LOCAL_CACHE_DIR}/venv

UV_BIN_VERSION=`${LOCAL_BIN_DIR}/uv --version 2> /dev/null | awk '{ print $2 }'`

# install uv if it doesnt exist or there is a version missmatch
if [ "${UV_BIN_VERSION}" != "${UV_VERSION}" ]; then
    arch=$(uname -m)
    case "$(uname -s)" in
        Darwin)
            ARCHIVE_NAME="uv-aarch64-apple-darwin"
            ;;
        Linux)
            ARCHIVE_NAME="uv-${arch}-unknown-linux-gnu"
            ;;
        *)
            echo "Unsupported operating system"
            exit 1
            ;;
    esac
    echo "Downloading uv ${UV_VERSION} ${ARCHIVE_NAME}"
    
    curl -o /tmp/uv.tgz -LsSf "https://github.com/astral-sh/uv/releases/download/${UV_VERSION}/${ARCHIVE_NAME}.tar.gz"
    tar xf /tmp/uv.tgz -C ${LOCAL_BIN_DIR}/ --strip-components=1 ${ARCHIVE_NAME}/uv ${ARCHIVE_NAME}/uvx
fi

${LOCAL_BIN_DIR}/uv run  -m __tasklib__ $@
