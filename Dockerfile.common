FROM debian:trixie-slim AS build

ARG TARGETARCH

ENV PUID=1000 PGID=1000
ENV DEBIAN_FRONTEND=noninteractive
ENV PATH="/work/opt/bin:$$PATH"
ENV HOST_ENVIRONMENT=container

RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked,mode=0755 \
    --mount=target=/var/cache/apt,type=cache,sharing=locked,mode=0755 \
    set -eux; \
    apt update; \
    apt upgrade -y; \
    apt install -y --no-install-recommends \
    gosu \
    ca-certificates \
    libicu76 \
    tzdata \
    xz-utils \
    vim \
    git \
    git-lfs \
    build-essential \
    iputils-ping \
    iproute2 \
    procps \
    binutils \
    ncdu \  
    unzip \
    curl \
    file \
    ; \
    echo "alias l='ls -laFHh'" >> /root/.bashrc; \
    echo "export PATH=\"/work/opt/bin:\$$PATH\"" >> /root/.bashrc; \
    mkdir -p /work/app /work/opt/bin; \
    rm -rf /var/lib/apt/lists/*;

# install watchexec
RUN set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCH="aarch64"; \
    else \
    ARCH="x86_64"; \
    fi; \
    curl -o /tmp/watchexec.tar.xz -LsSf https://github.com/watchexec/watchexec/releases/download/v$WATCHEXEC_VERSION/watchexec-$WATCHEXEC_VERSION-$${ARCH}-unknown-linux-gnu.tar.xz; \
    tar -C /work/opt/bin --strip-components=1 -xf /tmp/watchexec.tar.xz watchexec-$WATCHEXEC_VERSION-$${ARCH}-unknown-linux-gnu/watchexec

# install dockerize
RUN set -eux; \
    curl -o /tmp/dockerize.tgz -LsSf https://github.com/jwilder/dockerize/releases/download/v$DOCKERIZE_VERSION/dockerize-linux-$${TARGETARCH}-v$DOCKERIZE_VERSION.tar.gz; \
    tar -C /work/opt/bin -xf /tmp/dockerize.tgz 

# add static curl
RUN set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCH="aarch64"; \
    else\
    ARCH="x86_64"; \
    fi; \
    curl -o /tmp/curl.tgz -L -C - https://github.com/stunnel/static-curl/releases/download/${CURL_VERSION}/curl-linux-$${ARCH}-glibc-${CURL_VERSION}.tar.xz; \
    tar -C /work/opt/bin -xf /tmp/curl.tgz

$BUILD_TEMPLATE


FROM build AS final

$FINAL_TEMPLATE

RUN set -eux; \
    rm -rf /var/lib/apt/lists/*

COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

WORKDIR /work/app

LABEL org.opencontainers.image.watchexec_version="$WATCHEXEC_VERSION"
LABEL org.opencontainers.image.dockerize_version="$DOCKERIZE_VERSION"