FROM ghcr.io/linuxserver/baseimage-debian:bookworm AS build

ARG TARGETARCH

ENV PATH="/work/opt/bin:$PATH"
ENV HOST_ENVIRONMENT=container

RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked,mode=0755 \
    --mount=target=/var/cache/apt,type=cache,sharing=locked,mode=0755 \
    set -eux; \
    apt update; \
    apt upgrade -y; \
    apt install -y --no-install-recommends \
    ca-certificates \
    libicu72 \
    tzdata \
    xz-utils \
    vim \
    git \
    git-lfs \
    build-essential \
    iputils-ping \
    iproute2 \
    procps \
    binutils \
    ncdu \  
    unzip \
    curl \
    file \
    ; \
    useradd -s /bin/bash -m sprout; \
    echo "alias l='ls -laFHh'" >> /root/.bashrc; \
    echo "export PATH=\"/work/opt/bin:\$PATH\"" >> /root/.bashrc; \
    mkdir -p /work/app /work/opt/bin; \
    rm -rf /var/lib/apt/lists/*;

# install watchexec
RUN set -eux; \
    if [ "$TARGETARCH" = "arm64" ]; then \
    ARCH="aarch64"; \
    else \
    ARCH="x86_64"; \
    fi; \
    curl -o /tmp/watchexec.tar.xz -LsSf https://github.com/watchexec/watchexec/releases/download/v2.3.2/watchexec-2.3.2-${ARCH}-unknown-linux-gnu.tar.xz; \
    tar -C /work/opt/bin --strip-components=1 -xf /tmp/watchexec.tar.xz watchexec-2.3.2-${ARCH}-unknown-linux-gnu/watchexec

# install dockerize
RUN set -eux; \
    curl -o /tmp/dockerize.tgz -LsSf https://github.com/jwilder/dockerize/releases/download/v0.9.3/dockerize-linux-${TARGETARCH}-v0.9.3.tar.gz; \
    tar -C /work/opt/bin -xf /tmp/dockerize.tgz 

# add static curl
RUN set -eux; \
    if [ "$TARGETARCH" = "arm64" ]; then \
    ARCH="aarch64"; \
    else\
    ARCH="x86_64"; \
    fi; \
    curl -o /tmp/curl.tgz -L -C - https://github.com/stunnel/static-curl/releases/download/8.14.1/curl-linux-${ARCH}-glibc-8.14.1.tar.xz; \
    tar -C /work/opt/bin -xf /tmp/curl.tgz

# install python via miniconda
ENV PATH=/work/opt/venv/bin:$PATH
ENV UV_PYTHON_INSTALL_DIR=/work/opt/python
RUN --mount=target=/root/.cache/pip,type=cache,sharing=locked,mode=0755 \
    set -eux; \
    if [ "$TARGETARCH" = "arm64" ]; then \
    ARCH="aarch64"; \
    else \
    ARCH="x86_64"; \
    fi; \
    curl -o /tmp/uv.tgz -LsSf "https://github.com/astral-sh/uv/releases/download/0.7.13/uv-${ARCH}-unknown-linux-gnu.tar.gz"; \
    tar xf /tmp/uv.tgz -C /work/opt/bin --strip-components=1 uv-${ARCH}-unknown-linux-gnu/uv uv-${ARCH}-unknown-linux-gnu/uvx; \
    /work/opt/bin/uv venv /work/opt/venv --relocatable; \
    find /work/opt -type f -executable -exec file {} \; | grep "ELF" | cut -d: -f1 | xargs strip || true;



FROM build AS final

# don't bother being gracful in dev images. 
# can be overriden in final image if req. 
ENV S6_KILL_GRACETIME=0
ENV S6_KEEP_ENV=1
# linux defaults. override in compose. 
ENV PUID=1000
ENV PGID=1000

COPY <<EOF /etc/s6-overlay/s6-rc.d/init-adduser/branding
    :::::::::   ::::::::   ::::::::  :::    ::: :::::::::: :::::::::  
    :+:    :+: :+:    :+: :+:    :+: :+:   :+:  :+:        :+:    :+: 
    +:+    +:+ +:+    +:+ +:+        +:+  +:+   +:+        +:+    +:+ 
    +#+    +:+ +#+    +:+ +#+        +#++:++    +#++:++#   +#++:++#:  
    +#+    +#+ +#+    +#+ +#+        +#+  +#+   +#+        +#+    +#+ 
    #+#    #+# #+#    #+# #+#    #+# #+#   #+#  #+#        #+#    #+# 
    #########   ########   ########  ###    ### ########## ###    ### 
EOF

ENV PATH=/work/opt/venv/bin:$PATH
ENV PYTHON_ENVIRONMENT=Development
ENV VIRTUAL_ENV="/work/opt/venv"
ENV VIRTUAL_ENV_PROMPT="(venv) "
ENV UV_LINK_MODE=copy
ENV UV_PROJECT_ENVIRONMENT=/work/opt/venv
ENV PYTHONDONTWRITEBYTECODE=1

ENV PS1="(venv) \${debian_chroot:+(\$debian_chroot)}\\u@\\h:\\w\\\$ "

LABEL org.opencontainers.image.python_version="3.12"
LABEL org.opencontainers.image.uv_version="0.7.13"

COPY <<EOF /etc/s6-overlay/s6-rc.d/init-adduser/branding
    :::::::::  :::   ::: ::::::::::: :::    :::  ::::::::  ::::    ::: 
    :+:    :+: :+:   :+:     :+:     :+:    :+: :+:    :+: :+:+:   :+: 
    +:+    +:+  +:+ +:+      +:+     +:+    +:+ +:+    +:+ :+:+:+  +:+ 
    +#++:++#+    +#++:       +#+     +#++:++#++ +#+    +:+ +#+ +:+ +#+ 
    +#+           +#+        +#+     +#+    +#+ +#+    +#+ +#+  +#+#+# 
    #+#           #+#        #+#     #+#    #+# #+#    #+# #+#   #+#+# 
    ###           ###        ###     ###    ###  ########  ###    #### 
EOF


RUN set -eux; \
    rm -rf /var/lib/apt/lists/*

WORKDIR /work/app

LABEL org.opencontainers.image.watchexec_version="2.3.2"
LABEL org.opencontainers.image.dockerize_version="0.9.3"