# install python via miniconda
ENV PATH=/work/opt/venv/bin:$$PATH
ENV UV_PYTHON_INSTALL_DIR=/work/opt/python

# install fnm/node
RUN cat <<EOF > /tmp/fnm-init.sh
#!/bin/bash
source ~/.fnmrc
/work/opt/bin/fnm use ${NODE_VERSION} --install-if-missing
npm install -g corepack@latest
corepack enable
EOF
RUN --mount=target=/root/.cache/node,type=cache,sharing=locked,mode=0755 \
    set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCH="arm64"; \
    else \
    ARCH="linux"; \
    fi; \
    curl -o /tmp/fnm.zip -LsSf "https://github.com/Schniz/fnm/releases/download/v${FNM_VERSION}/fnm-$${ARCH}.zip"; \
    unzip -d /work/opt/bin /tmp/fnm.zip; \
    /work/opt/bin/fnm env >> /root/.fnmrc; \
    echo "source ~/.fnmrc" >> /root/.bashrc; \
    cat /tmp/fnm-init.sh; \
    /bin/bash /tmp/fnm-init.sh;


# install bun
RUN set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCHIVE="bun-linux-aarch64"; \
    else \
    ARCHIVE="bun-linux-x64"; \
    fi; \
    curl -o /tmp/bun.zip -LsSf "https://github.com/oven-sh/bun/releases/download/bun-v$BUN_VERSION/$${ARCHIVE}.zip"; \
    unzip -d /tmp /tmp/bun.zip; \
    mv /tmp/$${ARCHIVE}/bun /work/opt/bin/bun;


# install deno
RUN set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCH="aarch64"; \
    else \
    ARCH="x86_64"; \
    fi; \
    curl -o /tmp/deno.zip -LsSf "https://github.com/denoland/deno/releases/download/v$DENO_VERSION/deno-$${ARCH}-unknown-linux-gnu.zip"; \
    unzip -d /work/opt/bin /tmp/deno.zip;
