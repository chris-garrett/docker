ENV NODE_ENV=development
ENV FNM_DIR=/work/opt/fnm
ENV FNM_COREPACK_ENABLED=true

RUN --mount=target=/root/.cache/node,type=cache,sharing=locked,mode=0755 \
    set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCH="arm64"; \
    else \
    ARCH="linux"; \
    fi; \
    curl -o /tmp/fnm.zip -LsSf "https://github.com/Schniz/fnm/releases/download/v${FNM_VERSION}/fnm-$${ARCH}.zip"; \
    unzip -d /work/opt/bin /tmp/fnm.zip;

RUN cat <<EOF >> /tmp/fnm-init.sh
#!/bin/bash
eval "$$(/work/opt/bin/fnm env --use-on-cd --shell bash)"
/work/opt/bin/fnm use ${NODE_VERSION} --install-if-missing --corepack-enabled;
EOF

# install node
RUN set -eux; \
    bash /tmp/fnm-init.sh;

# install bun
RUN set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCHIVE="bun-linux-aarch64"; \
    else \
    ARCHIVE="bun-linux-x64"; \
    fi; \
    curl -o /tmp/bun.zip -LsSf "https://github.com/oven-sh/bun/releases/download/bun-v$BUN_VERSION/$${ARCHIVE}.zip"; \
    unzip -d /tmp /tmp/bun.zip; \
    mv /tmp/$${ARCHIVE}/bun /work/opt/bin/bun;


# install deno
RUN set -eux; \
    if [ "$$TARGETARCH" = "arm64" ]; then \
    ARCH="aarch64"; \
    else \
    ARCH="x86_64"; \
    fi; \
    curl -o /tmp/deno.zip -LsSf "https://github.com/denoland/deno/releases/download/v$DENO_VERSION/deno-$${ARCH}-unknown-linux-gnu.zip"; \
    unzip -d /work/opt/bin /tmp/deno.zip;
